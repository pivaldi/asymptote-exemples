import three;

real picSize = 15cm;

pen hsb ( real h, real s, real b )
{
  if ( s == 0 ) {
    return rgb( b, b, b );
  } else {
    real vh = 6h;
    if ( vh == 6 ) h = 0;
    int vi = floor( vh );
    real v1 = b * ( 1 - s );
    real v2 = b * ( 1 - s * ( vh - vi ) );
    real v3 = b * ( 1 - s * ( 1 - ( vh - vi ) ) );
    if ( vi == 0 ) return rgb( b, v3, v1 );
    if ( vi == 1 ) return rgb( v2, b, v1 );
    if ( vi == 2 ) return rgb( v1, b, v3 );
    if ( vi == 3 ) return rgb( v1, v2, b );
    if ( vi == 4 ) return rgb( v3, v1, b );
    return rgb( b, v1, v2 );
  }
}

pen hue ( real h ) { return hsb( h, 1.0, 0.85 ); }

triple theCamera;

pen lighten ( pen p, real percent )
{
  if ( percent > 1 ) return white;
  if ( percent < -1 ) return black;
  real[] c = colors( rgb( p ) );
  for ( int i = 0 ; i < c.length ; ++i ) {
    c[i] = 1 - ( 1 - c[i] ) * ( 1 - percent );
    if ( c[i] < 0 ) c[i] = 0;
    if ( c[i] > 1 ) c[i] = 1;
  }
  return rgb( c[0], c[1], c[2] );
}

void render( picture ontothis, picture[] objects, triple[] locations )
{
  real[] distances = new real[];
  for ( int i = 0 ; i < locations.length ; ++i )
    distances.push( length( locations[i]-theCamera ) );
  real farthest = max( distances );
  int maxdistance = 100000;
  int[][] sorting = new int[][];
  for ( int i = 0 ; i < distances.length ; ++i )
    sorting.push( new int[] { floor( distances[i]*maxdistance ), i } );
  sorting = sort( sorting );
  for ( int i = sorting.length - 1 ; i >= 0 ; --i )
    add( ontothis, objects[sorting[i][1]] );
}

pen changepen ( pen orig, real thick, bool depth, triple theCamera, triple midpoint )
{
  pen result = orig;
  if ( depth ) {
    real dist2line = length( theCamera - midpoint );
    real dist2orig = length( theCamera );
    if ( dist2line > dist2orig )
      result = lighten( result, ( dist2line - dist2orig + 1 ) / 3 );
  }
  if ( thick != 0 ) {
    real mythick = thick;
    if ( depth )
      mythick = mythick / ( length( theCamera - midpoint ) - length( theCamera ) + 2 );
    result = result + linewidth( mythick );
  }
  return result;
}

triple[][] flatten_arrows ( triple[][] arrows )
{
  // in the event that the CD in GE was fluffing some arrows (say in Z x CircXY)
  // you can use this to make all the arrows that are curvy sit in the (0,0,Z) plane
  // of their endpoints; just wrap your new triple[][] { arrowlist } in a call to this.
  // (note that this works on Y values because GE swaps Y and Z when it dumps asy code)
  for ( int i = 0 ; i < arrows.length ; ++i )
    if ( arrows[i].length == 4 )
      for ( int j = 1 ; j < 3 ; ++j )
        arrows[i][j] = ( arrows[i][j].x, arrows[i][0].y, arrows[i][j].z );
  return arrows;
}

picture CayleyDiagram ( triple[] nodeLocs = null, string[] nodeNames = null,
                        triple[][] arrows = null, int[] orders = null, pen[] arrowPens = null,
                        pen drawPen = black, pen fillPen = lightgrey, real nodeSize = 0.25,
                        real arrowThickness = 0, real labelScaling = 1.0,
                        bool orderDepth = true, real arrowMargin = 0.0,
                        real arrowSize = 10, bool depthCueing = false,
                        real arrowSlicing = 0.0,
                        triple cam = (0,0,0) )
{
  if ( cam != (0,0,0) ) {
    theCamera = cam;
    currentprojection = perspective( theCamera );
  }
  if ( alias( nodeLocs, null ) ) nodeLocs = new triple[]{ };
  if ( alias( arrows, null ) ) arrows = new triple[][]{ };
  if ( alias( orders, null ) ) orders = new int[]{ };
  if ( alias( arrowPens, null ) ) arrowPens = new pen[]{ };
  picture result = new picture;
  size(result, picSize);
  //    face[] faces;
  picture[] torender = new picture[];
  triple[] locs = new triple[];
  real dist2orig = length( theCamera );
  for ( int i = 0 ; i < arrows.length ; ++i ) {
    guide3 g;
    triple[] a = arrows[i];
    for ( int j = 0 ; j < a.length ; ++j ) g = g..a[j];
    path3 p = g;
    if ( normal( p ) == (0,0,0) ) {
      if ( cross( dir( p, 0 ), (1,0,0) ) == (0,0,0) )
        p = a[0]+(0,0.001,0)--p;
      else
        p = a[0]+(0.001,0,0)--p;
    }

    if ( orderDepth ) {
      int slices = 1;
      //write( "arrow arc length: ", p.arclength() );
      if ( arrowSlicing > 0.0 ) slices = floor( arclength(p) / arrowSlicing );
      if ( slices == 0 ) slices = 1;
      for ( int j = 0 ; j < slices ; ++j ) {
        pen P = changepen( arrowPens[i], arrowThickness, depthCueing, theCamera,
                           point(p, length(p)*(j+0.5)/slices ) );
        torender.push( new picture );
        path3 subp = subpath( p, length(p)*j*1.0/slices, length(p)*(j+1.0)/slices );
        // draw( torender[torender.length-1], g = subp, p = P,
        //       margin = TrueMargin( ( j == 0 ) ? arrowMargin : 0,
        //                            ( j == slices - 1 ) ? arrowMargin : 0 ),
        //       arrow = ( ( orders[i] == 2 ) || ( j < slices - 1 ) ) ?
        //       None : Arrow( arrowSize ) );
        // TODO : add margin and arrows
        size(torender[torender.length-1], picSize);
        draw( torender[torender.length-1], g = subp, p = P);

        locs.push( point( p, length(p)*(j+0.5)/slices ) );
      }
    } else {
      // ignore arrowSlicing when depth not used; it has no effect
      pen P = changepen( arrowPens[i], arrowThickness, depthCueing, theCamera,
                         point(p, 0.5*length(p) ) );
      // draw( pic = result, g = p, p = P,
      //       margin = TrueMargin( arrowMargin, arrowMargin ),
      //       arrow = ( orders[i] == 2 ) ? None : Arrow( arrowSize ) );
      // TODO : add margin and arrows
      draw( pic = result, g = p, p = P);
    }
  }
  real numerator = labelScaling * length( theCamera );
  for ( int i = 0 ; i < nodeLocs.length ; ++i ) {
    path3 p = circle( nodeLocs[i], nodeSize, theCamera - nodeLocs[i] );
    pen tmpFP = fillPen;
    pen tmpDP = drawPen;
    if ( depthCueing ) {
      real dist2node = length( theCamera - nodeLocs[i] );
      if ( dist2node > dist2orig - 1 ) {
        tmpDP = lighten( tmpDP, ( dist2node - dist2orig + 1 ) / 3 );
        tmpFP = lighten( tmpFP, ( dist2node - dist2orig + 1 ) / 3 );
      }
    }

    if ( orderDepth ) {
      torender.push( new picture );
      // filldraw( torender[torender.length-1], p, tmpFP, tmpDP );
      size(torender[torender.length-1], picSize);
      draw( torender[torender.length-1], p, tmpDP );// TODO : fill !

      if ( !alias( nodeNames, null ) )
        add( torender[torender.length-1], scale( numerator / length( nodeLocs[i] - theCamera ) )
             * Label( nodeNames[i], nodeLocs[i] ) );
      locs.push( nodeLocs[i] );
    } else {
      // filldraw( result, p, tmpFP, tmpDP );
      draw(result, p, tmpDP);// TODO : fill !
      draw(result, surface(p, new pen[] {tmpFP, tmpDP}));
    }
  }
  if ( !orderDepth && !alias( nodeNames, null ) ) {
    real numerator = labelScaling * length( theCamera );
    for ( int i = 0 ; i < nodeNames.length ; ++i )
      add( result, scale( numerator / length( nodeLocs[i] - theCamera ) )
           * Label( nodeNames[i], nodeLocs[i] ) );
  }

  if ( orderDepth ) render( result, torender, locs );

  return result;
}

int[] orders = new int[] {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2};


triple[] nodeLocs = new triple[] {(-0.0978342,-0.153108,-0.260496), (-0.195034,-0.00520833,-0.261896), (-0.118334,-0.325408,-0.253596), (-0.257534,-0.302908,-0.246696), (-0.358034,0.0173917,-0.259696), (-0.372434,-0.130908,-0.249896), (-0.0489342,-0.101108,-0.0811958), (-0.143234,0.0401917,-0.0831958), (-0.00883417,-0.211208,0.0938042), (-0.0800342,-0.143308,0.238704), (-0.224434,0.116792,0.0906042), (-0.189834,0.0225917,0.235304), (-0.0769342,-0.431908,-0.0807958), (-0.226434,-0.400608,-0.0822958), (-0.0243342,-0.385308,0.0944042), (-0.0885342,-0.330108,0.238204), (-0.302434,-0.337408,0.0810042), (-0.262534,-0.292808,0.234104), (-0.437234,0.0937917,-0.0883958), (-0.448234,-0.0677083,-0.0864958), (-0.387334,0.142092,0.0855042), (-0.358434,0.0592917,0.230304), (-0.416234,-0.165208,0.0783042), (-0.370834,-0.129708,0.230704), (0.00506583,-0.0841083,-0.378796), (-0.0884342,0.0528917,-0.381596), (-0.0123342,-0.269108,-0.364696), (-0.161234,-0.239308,-0.360996), (-0.258434,0.0855917,-0.371396), (-0.270134,-0.0762083,-0.364496), (0.167966,0.0223917,-0.338196), (0.0713658,0.171492,-0.339796), (0.335266,-0.0119083,-0.279496), (0.372666,0.122392,-0.231296), (0.116266,0.330192,-0.283596), (0.257066,0.297492,-0.234296), (0.155566,-0.305608,-0.312696), (0.0168658,-0.288308,-0.312896), (0.317266,-0.200008,-0.271596), (0.357266,-0.0528083,-0.229996), (0.0551658,-0.116508,-0.269196), (0.193666,-0.0282083,-0.235196), (-0.215334,0.247192,-0.321296), (-0.230734,0.100192,-0.318396), (-0.0582342,0.363492,-0.279996), (0.0935658,0.325592,-0.238296), (-0.0550342,0.0491917,-0.272696), (0.0769658,0.149792,-0.238496), (0.0931658,-0.00920833,-0.0432958), (-0.00743417,0.142592,-0.0447958), (0.125466,-0.111008,0.125504), (0.0593658,-0.0548083,0.272804), (-0.0861342,0.207392,0.121404), (-0.0581342,0.122792,0.269204), (0.210166,0.0696917,-0.181596), (0.117766,0.207592,-0.184396), (0.382766,0.0247917,-0.122796), (0.413766,0.171792,-0.0790958), (0.159366,0.375892,-0.125896), (0.307166,0.332392,-0.0822958), (0.298766,-0.159208,0.176804), (0.228766,-0.0937083,0.319004), (0.414666,-0.0757083,0.0425042), (0.449266,0.0608917,0.0858042), (0.272066,0.0688917,0.363904), (0.369466,0.137192,0.251104), (-0.0468342,0.375692,0.171304), (-0.0119342,0.284092,0.313904), (0.0806658,0.439892,0.0373042), (0.220666,0.404192,0.0818042), (0.155466,0.243892,0.360404), (0.262166,0.297792,0.248004), (0.0652658,-0.463908,-0.0395958), (-0.0747342,-0.442008,-0.0400958), (0.126266,-0.420908,0.138704), (0.0534658,-0.360008,0.280704), (-0.162434,-0.371308,0.130004), (-0.112334,-0.334708,0.281904), (0.187966,-0.397408,-0.166896), (0.0429658,-0.372308,-0.169596), (0.347666,-0.282108,-0.127196), (0.387466,-0.147208,-0.0886958), (0.0881658,-0.212408,-0.124496), (0.221566,-0.112508,-0.0870958), (0.282566,-0.306408,0.177804), (0.215766,-0.253708,0.319504), (0.398166,-0.237508,0.0475042), (0.437066,-0.0880083,0.0929042), (0.257266,-0.0794083,0.372804), (0.361166,-0.0220083,0.256204), (-0.115734,-0.212808,0.181204), (-0.0719342,-0.165108,0.342404), (0.00396583,-0.137908,0.0487042), (0.145866,-0.0450083,0.0790042), (0.0907658,-0.0582083,0.380304), (0.191666,0.00959167,0.264804), (-0.399934,0.230992,-0.0488958), (-0.414134,0.0822917,-0.0453958), (-0.345934,0.287792,0.128804), (-0.317434,0.193292,0.272004), (-0.380234,-0.0300083,0.126104), (-0.336634,0.0182917,0.278804), (-0.282334,0.311992,-0.177696), (-0.297534,0.153492,-0.175196), (-0.122234,0.417992,-0.137896), (0.0204658,0.389292,-0.0965958), (-0.128734,0.115692,-0.128796), (0.0108658,0.205592,-0.0910958), (-0.186134,0.393392,0.167904), (-0.159934,0.309692,0.310604), (-0.0708342,0.465692,0.0378042), (0.0819658,0.429192,0.0851042), (0.0163658,0.264292,0.366404), (0.115866,0.330792,0.250104), (-0.213634,-0.0647083,0.179604), (-0.165334,-0.0278083,0.339004), (-0.0907342,0.00379167,0.0468042), (0.0463658,0.106592,0.0779042), (-0.00593417,0.0907917,0.377904), (0.0993658,0.147092,0.262404)};

triple[][] arrows = new triple[][] {
  { (-0.0978342,-0.153108,-0.260496), (0.00506583,-0.0841083,-0.378796) },
  { (-0.195034,-0.00520833,-0.261896), (-0.0884342,0.0528917,-0.381596) },
  { (-0.118334,-0.325408,-0.253596), (-0.0123342,-0.269108,-0.364696) },
  { (-0.257534,-0.302908,-0.246696), (-0.161234,-0.239308,-0.360996) },
  { (-0.358034,0.0173917,-0.259696), (-0.258434,0.0855917,-0.371396) },
  { (-0.372434,-0.130908,-0.249896), (-0.270134,-0.0762083,-0.364496) },
  { (-0.0489342,-0.101108,-0.0811958), (0.0931658,-0.00920833,-0.0432958) },
  { (-0.143234,0.0401917,-0.0831958), (-0.00743417,0.142592,-0.0447958) },
  { (-0.00883417,-0.211208,0.0938042), (0.125466,-0.111008,0.125504) },
  { (-0.0800342,-0.143308,0.238704), (0.0593658,-0.0548083,0.272804) },
  { (-0.224434,0.116792,0.0906042), (-0.0861342,0.207392,0.121404) },
  { (-0.189834,0.0225917,0.235304), (-0.0581342,0.122792,0.269204) },
  { (-0.0769342,-0.431908,-0.0807958), (0.0652658,-0.463908,-0.0395958) },
  { (-0.226434,-0.400608,-0.0822958), (-0.0747342,-0.442008,-0.0400958) },
  { (-0.0243342,-0.385308,0.0944042), (0.126266,-0.420908,0.138704) },
  { (-0.0885342,-0.330108,0.238204), (0.0534658,-0.360008,0.280704) },
  { (-0.302434,-0.337408,0.0810042), (-0.162434,-0.371308,0.130004) },
  { (-0.262534,-0.292808,0.234104), (-0.112334,-0.334708,0.281904) },
  { (-0.437234,0.0937917,-0.0883958), (-0.399934,0.230992,-0.0488958) },
  { (-0.448234,-0.0677083,-0.0864958), (-0.414134,0.0822917,-0.0453958) },
  { (-0.387334,0.142092,0.0855042), (-0.345934,0.287792,0.128804) },
  { (-0.358434,0.0592917,0.230304), (-0.317434,0.193292,0.272004) },
  { (-0.416234,-0.165208,0.0783042), (-0.380234,-0.0300083,0.126104) },
  { (-0.370834,-0.129708,0.230704), (-0.336634,0.0182917,0.278804) },
  { (-0.0978342,-0.153108,-0.260496), (0.00506583,-0.0841083,-0.378796) },
  { (-0.195034,-0.00520833,-0.261896), (-0.0884342,0.0528917,-0.381596) },
  { (-0.118334,-0.325408,-0.253596), (-0.0123342,-0.269108,-0.364696) },
  { (-0.257534,-0.302908,-0.246696), (-0.161234,-0.239308,-0.360996) },
  { (-0.358034,0.0173917,-0.259696), (-0.258434,0.0855917,-0.371396) },
  { (-0.372434,-0.130908,-0.249896), (-0.270134,-0.0762083,-0.364496) },
  { (0.167966,0.0223917,-0.338196), (0.210166,0.0696917,-0.181596) },
  { (0.0713658,0.171492,-0.339796), (0.117766,0.207592,-0.184396) },
  { (0.335266,-0.0119083,-0.279496), (0.382766,0.0247917,-0.122796) },
  { (0.372666,0.122392,-0.231296), (0.413766,0.171792,-0.0790958) },
  { (0.116266,0.330192,-0.283596), (0.159366,0.375892,-0.125896) },
  { (0.257066,0.297492,-0.234296), (0.307166,0.332392,-0.0822958) },
  { (0.155566,-0.305608,-0.312696), (0.187966,-0.397408,-0.166896) },
  { (0.0168658,-0.288308,-0.312896), (0.0429658,-0.372308,-0.169596) },
  { (0.317266,-0.200008,-0.271596), (0.347666,-0.282108,-0.127196) },
  { (0.357266,-0.0528083,-0.229996), (0.387466,-0.147208,-0.0886958) },
  { (0.0551658,-0.116508,-0.269196), (0.0881658,-0.212408,-0.124496) },
  { (0.193666,-0.0282083,-0.235196), (0.221566,-0.112508,-0.0870958) },
  { (-0.215334,0.247192,-0.321296), (-0.282334,0.311992,-0.177696) },
  { (-0.230734,0.100192,-0.318396), (-0.297534,0.153492,-0.175196) },
  { (-0.0582342,0.363492,-0.279996), (-0.122234,0.417992,-0.137896) },
  { (0.0935658,0.325592,-0.238296), (0.0204658,0.389292,-0.0965958) },
  { (-0.0550342,0.0491917,-0.272696), (-0.128734,0.115692,-0.128796) },
  { (0.0769658,0.149792,-0.238496), (0.0108658,0.205592,-0.0910958) },
  { (-0.0489342,-0.101108,-0.0811958), (0.0931658,-0.00920833,-0.0432958) },
  { (-0.143234,0.0401917,-0.0831958), (-0.00743417,0.142592,-0.0447958) },
  { (-0.00883417,-0.211208,0.0938042), (0.125466,-0.111008,0.125504) },
  { (-0.0800342,-0.143308,0.238704), (0.0593658,-0.0548083,0.272804) },
  { (-0.224434,0.116792,0.0906042), (-0.0861342,0.207392,0.121404) },
  { (-0.189834,0.0225917,0.235304), (-0.0581342,0.122792,0.269204) },
  { (0.167966,0.0223917,-0.338196), (0.210166,0.0696917,-0.181596) },
  { (0.0713658,0.171492,-0.339796), (0.117766,0.207592,-0.184396) },
  { (0.335266,-0.0119083,-0.279496), (0.382766,0.0247917,-0.122796) },
  { (0.372666,0.122392,-0.231296), (0.413766,0.171792,-0.0790958) },
  { (0.116266,0.330192,-0.283596), (0.159366,0.375892,-0.125896) },
  { (0.257066,0.297492,-0.234296), (0.307166,0.332392,-0.0822958) },
  { (0.298766,-0.159208,0.176804), (0.282566,-0.306408,0.177804) },
  { (0.228766,-0.0937083,0.319004), (0.215766,-0.253708,0.319504) },
  { (0.414666,-0.0757083,0.0425042), (0.398166,-0.237508,0.0475042) },
  { (0.449266,0.0608917,0.0858042), (0.437066,-0.0880083,0.0929042) },
  { (0.272066,0.0688917,0.363904), (0.257266,-0.0794083,0.372804) },
  { (0.369466,0.137192,0.251104), (0.361166,-0.0220083,0.256204) },
  { (-0.0468342,0.375692,0.171304), (-0.186134,0.393392,0.167904) },
  { (-0.0119342,0.284092,0.313904), (-0.159934,0.309692,0.310604) },
  { (0.0806658,0.439892,0.0373042), (-0.0708342,0.465692,0.0378042) },
  { (0.220666,0.404192,0.0818042), (0.0819658,0.429192,0.0851042) },
  { (0.155466,0.243892,0.360404), (0.0163658,0.264292,0.366404) },
  { (0.262166,0.297792,0.248004), (0.115866,0.330792,0.250104) },
  { (-0.0769342,-0.431908,-0.0807958), (0.0652658,-0.463908,-0.0395958) },
  { (-0.226434,-0.400608,-0.0822958), (-0.0747342,-0.442008,-0.0400958) },
  { (-0.0243342,-0.385308,0.0944042), (0.126266,-0.420908,0.138704) },
  { (-0.0885342,-0.330108,0.238204), (0.0534658,-0.360008,0.280704) },
  { (-0.302434,-0.337408,0.0810042), (-0.162434,-0.371308,0.130004) },
  { (-0.262534,-0.292808,0.234104), (-0.112334,-0.334708,0.281904) },
  { (0.155566,-0.305608,-0.312696), (0.187966,-0.397408,-0.166896) },
  { (0.0168658,-0.288308,-0.312896), (0.0429658,-0.372308,-0.169596) },
  { (0.317266,-0.200008,-0.271596), (0.347666,-0.282108,-0.127196) },
  { (0.357266,-0.0528083,-0.229996), (0.387466,-0.147208,-0.0886958) },
  { (0.0551658,-0.116508,-0.269196), (0.0881658,-0.212408,-0.124496) },
  { (0.193666,-0.0282083,-0.235196), (0.221566,-0.112508,-0.0870958) },
  { (0.298766,-0.159208,0.176804), (0.282566,-0.306408,0.177804) },
  { (0.228766,-0.0937083,0.319004), (0.215766,-0.253708,0.319504) },
  { (0.414666,-0.0757083,0.0425042), (0.398166,-0.237508,0.0475042) },
  { (0.449266,0.0608917,0.0858042), (0.437066,-0.0880083,0.0929042) },
  { (0.272066,0.0688917,0.363904), (0.257266,-0.0794083,0.372804) },
  { (0.369466,0.137192,0.251104), (0.361166,-0.0220083,0.256204) },
  { (-0.115734,-0.212808,0.181204), (-0.213634,-0.0647083,0.179604) },
  { (-0.0719342,-0.165108,0.342404), (-0.165334,-0.0278083,0.339004) },
  { (0.00396583,-0.137908,0.0487042), (-0.0907342,0.00379167,0.0468042) },
  { (0.145866,-0.0450083,0.0790042), (0.0463658,0.106592,0.0779042) },
  { (0.0907658,-0.0582083,0.380304), (-0.00593417,0.0907917,0.377904) },
  { (0.191666,0.00959167,0.264804), (0.0993658,0.147092,0.262404) },
  { (-0.437234,0.0937917,-0.0883958), (-0.399934,0.230992,-0.0488958) },
  { (-0.448234,-0.0677083,-0.0864958), (-0.414134,0.0822917,-0.0453958) },
  { (-0.387334,0.142092,0.0855042), (-0.345934,0.287792,0.128804) },
  { (-0.358434,0.0592917,0.230304), (-0.317434,0.193292,0.272004) },
  { (-0.416234,-0.165208,0.0783042), (-0.380234,-0.0300083,0.126104) },
  { (-0.370834,-0.129708,0.230704), (-0.336634,0.0182917,0.278804) },
  { (-0.215334,0.247192,-0.321296), (-0.282334,0.311992,-0.177696) },
  { (-0.230734,0.100192,-0.318396), (-0.297534,0.153492,-0.175196) },
  { (-0.0582342,0.363492,-0.279996), (-0.122234,0.417992,-0.137896) },
  { (0.0935658,0.325592,-0.238296), (0.0204658,0.389292,-0.0965958) },
  { (-0.0550342,0.0491917,-0.272696), (-0.128734,0.115692,-0.128796) },
  { (0.0769658,0.149792,-0.238496), (0.0108658,0.205592,-0.0910958) },
  { (-0.0468342,0.375692,0.171304), (-0.186134,0.393392,0.167904) },
  { (-0.0119342,0.284092,0.313904), (-0.159934,0.309692,0.310604) },
  { (0.0806658,0.439892,0.0373042), (-0.0708342,0.465692,0.0378042) },
  { (0.220666,0.404192,0.0818042), (0.0819658,0.429192,0.0851042) },
  { (0.155466,0.243892,0.360404), (0.0163658,0.264292,0.366404) },
  { (0.262166,0.297792,0.248004), (0.115866,0.330792,0.250104) },
  { (-0.115734,-0.212808,0.181204), (-0.213634,-0.0647083,0.179604) },
  { (-0.0719342,-0.165108,0.342404), (-0.165334,-0.0278083,0.339004) },
  { (0.00396583,-0.137908,0.0487042), (-0.0907342,0.00379167,0.0468042) },
  { (0.145866,-0.0450083,0.0790042), (0.0463658,0.106592,0.0779042) },
  { (0.0907658,-0.0582083,0.380304), (-0.00593417,0.0907917,0.377904) },
  { (0.191666,0.00959167,0.264804), (0.0993658,0.147092,0.262404) },
  { (-0.0978342,-0.153108,-0.260496), (-0.0489342,-0.101108,-0.0811958) },
  { (-0.195034,-0.00520833,-0.261896), (-0.143234,0.0401917,-0.0831958) },
  { (-0.118334,-0.325408,-0.253596), (-0.0769342,-0.431908,-0.0807958) },
  { (-0.257534,-0.302908,-0.246696), (-0.226434,-0.400608,-0.0822958) },
  { (-0.358034,0.0173917,-0.259696), (-0.437234,0.0937917,-0.0883958) },
  { (-0.372434,-0.130908,-0.249896), (-0.448234,-0.0677083,-0.0864958) },
  { (-0.0978342,-0.153108,-0.260496), (-0.0489342,-0.101108,-0.0811958) },
  { (-0.195034,-0.00520833,-0.261896), (-0.143234,0.0401917,-0.0831958) },
  { (-0.00883417,-0.211208,0.0938042), (-0.0243342,-0.385308,0.0944042) },
  { (-0.0800342,-0.143308,0.238704), (-0.0885342,-0.330108,0.238204) },
  { (-0.224434,0.116792,0.0906042), (-0.387334,0.142092,0.0855042) },
  { (-0.189834,0.0225917,0.235304), (-0.358434,0.0592917,0.230304) },
  { (-0.118334,-0.325408,-0.253596), (-0.0769342,-0.431908,-0.0807958) },
  { (-0.257534,-0.302908,-0.246696), (-0.226434,-0.400608,-0.0822958) },
  { (-0.00883417,-0.211208,0.0938042), (-0.0243342,-0.385308,0.0944042) },
  { (-0.0800342,-0.143308,0.238704), (-0.0885342,-0.330108,0.238204) },
  { (-0.302434,-0.337408,0.0810042), (-0.416234,-0.165208,0.0783042) },
  { (-0.262534,-0.292808,0.234104), (-0.370834,-0.129708,0.230704) },
  { (-0.358034,0.0173917,-0.259696), (-0.437234,0.0937917,-0.0883958) },
  { (-0.372434,-0.130908,-0.249896), (-0.448234,-0.0677083,-0.0864958) },
  { (-0.224434,0.116792,0.0906042), (-0.387334,0.142092,0.0855042) },
  { (-0.189834,0.0225917,0.235304), (-0.358434,0.0592917,0.230304) },
  { (-0.302434,-0.337408,0.0810042), (-0.416234,-0.165208,0.0783042) },
  { (-0.262534,-0.292808,0.234104), (-0.370834,-0.129708,0.230704) },
  { (0.00506583,-0.0841083,-0.378796), (0.167966,0.0223917,-0.338196) },
  { (-0.0884342,0.0528917,-0.381596), (0.0713658,0.171492,-0.339796) },
  { (-0.0123342,-0.269108,-0.364696), (0.155566,-0.305608,-0.312696) },
  { (-0.161234,-0.239308,-0.360996), (0.0168658,-0.288308,-0.312896) },
  { (-0.258434,0.0855917,-0.371396), (-0.215334,0.247192,-0.321296) },
  { (-0.270134,-0.0762083,-0.364496), (-0.230734,0.100192,-0.318396) },
  { (0.00506583,-0.0841083,-0.378796), (0.167966,0.0223917,-0.338196) },
  { (-0.0884342,0.0528917,-0.381596), (0.0713658,0.171492,-0.339796) },
  { (0.335266,-0.0119083,-0.279496), (0.317266,-0.200008,-0.271596) },
  { (0.372666,0.122392,-0.231296), (0.357266,-0.0528083,-0.229996) },
  { (0.116266,0.330192,-0.283596), (-0.0582342,0.363492,-0.279996) },
  { (0.257066,0.297492,-0.234296), (0.0935658,0.325592,-0.238296) },
  { (-0.0123342,-0.269108,-0.364696), (0.155566,-0.305608,-0.312696) },
  { (-0.161234,-0.239308,-0.360996), (0.0168658,-0.288308,-0.312896) },
  { (0.335266,-0.0119083,-0.279496), (0.317266,-0.200008,-0.271596) },
  { (0.372666,0.122392,-0.231296), (0.357266,-0.0528083,-0.229996) },
  { (0.0551658,-0.116508,-0.269196), (-0.0550342,0.0491917,-0.272696) },
  { (0.193666,-0.0282083,-0.235196), (0.0769658,0.149792,-0.238496) },
  { (-0.258434,0.0855917,-0.371396), (-0.215334,0.247192,-0.321296) },
  { (-0.270134,-0.0762083,-0.364496), (-0.230734,0.100192,-0.318396) },
  { (0.116266,0.330192,-0.283596), (-0.0582342,0.363492,-0.279996) },
  { (0.257066,0.297492,-0.234296), (0.0935658,0.325592,-0.238296) },
  { (0.0551658,-0.116508,-0.269196), (-0.0550342,0.0491917,-0.272696) },
  { (0.193666,-0.0282083,-0.235196), (0.0769658,0.149792,-0.238496) },
  { (0.0931658,-0.00920833,-0.0432958), (0.210166,0.0696917,-0.181596) },
  { (-0.00743417,0.142592,-0.0447958), (0.117766,0.207592,-0.184396) },
  { (0.125466,-0.111008,0.125504), (0.298766,-0.159208,0.176804) },
  { (0.0593658,-0.0548083,0.272804), (0.228766,-0.0937083,0.319004) },
  { (-0.0861342,0.207392,0.121404), (-0.0468342,0.375692,0.171304) },
  { (-0.0581342,0.122792,0.269204), (-0.0119342,0.284092,0.313904) },
  { (0.0931658,-0.00920833,-0.0432958), (0.210166,0.0696917,-0.181596) },
  { (-0.00743417,0.142592,-0.0447958), (0.117766,0.207592,-0.184396) },
  { (0.382766,0.0247917,-0.122796), (0.414666,-0.0757083,0.0425042) },
  { (0.413766,0.171792,-0.0790958), (0.449266,0.0608917,0.0858042) },
  { (0.159366,0.375892,-0.125896), (0.0806658,0.439892,0.0373042) },
  { (0.307166,0.332392,-0.0822958), (0.220666,0.404192,0.0818042) },
  { (0.125466,-0.111008,0.125504), (0.298766,-0.159208,0.176804) },
  { (0.0593658,-0.0548083,0.272804), (0.228766,-0.0937083,0.319004) },
  { (0.382766,0.0247917,-0.122796), (0.414666,-0.0757083,0.0425042) },
  { (0.413766,0.171792,-0.0790958), (0.449266,0.0608917,0.0858042) },
  { (0.272066,0.0688917,0.363904), (0.155466,0.243892,0.360404) },
  { (0.369466,0.137192,0.251104), (0.262166,0.297792,0.248004) },
  { (-0.0861342,0.207392,0.121404), (-0.0468342,0.375692,0.171304) },
  { (-0.0581342,0.122792,0.269204), (-0.0119342,0.284092,0.313904) },
  { (0.159366,0.375892,-0.125896), (0.0806658,0.439892,0.0373042) },
  { (0.307166,0.332392,-0.0822958), (0.220666,0.404192,0.0818042) },
  { (0.272066,0.0688917,0.363904), (0.155466,0.243892,0.360404) },
  { (0.369466,0.137192,0.251104), (0.262166,0.297792,0.248004) },
  { (0.0652658,-0.463908,-0.0395958), (0.187966,-0.397408,-0.166896) },
  { (-0.0747342,-0.442008,-0.0400958), (0.0429658,-0.372308,-0.169596) },
  { (0.126266,-0.420908,0.138704), (0.282566,-0.306408,0.177804) },
  { (0.0534658,-0.360008,0.280704), (0.215766,-0.253708,0.319504) },
  { (-0.162434,-0.371308,0.130004), (-0.115734,-0.212808,0.181204) },
  { (-0.112334,-0.334708,0.281904), (-0.0719342,-0.165108,0.342404) },
  { (0.0652658,-0.463908,-0.0395958), (0.187966,-0.397408,-0.166896) },
  { (-0.0747342,-0.442008,-0.0400958), (0.0429658,-0.372308,-0.169596) },
  { (0.347666,-0.282108,-0.127196), (0.398166,-0.237508,0.0475042) },
  { (0.387466,-0.147208,-0.0886958), (0.437066,-0.0880083,0.0929042) },
  { (0.0881658,-0.212408,-0.124496), (0.00396583,-0.137908,0.0487042) },
  { (0.221566,-0.112508,-0.0870958), (0.145866,-0.0450083,0.0790042) },
  { (0.126266,-0.420908,0.138704), (0.282566,-0.306408,0.177804) },
  { (0.0534658,-0.360008,0.280704), (0.215766,-0.253708,0.319504) },
  { (0.347666,-0.282108,-0.127196), (0.398166,-0.237508,0.0475042) },
  { (0.387466,-0.147208,-0.0886958), (0.437066,-0.0880083,0.0929042) },
  { (0.257266,-0.0794083,0.372804), (0.0907658,-0.0582083,0.380304) },
  { (0.361166,-0.0220083,0.256204), (0.191666,0.00959167,0.264804) },
  { (-0.162434,-0.371308,0.130004), (-0.115734,-0.212808,0.181204) },
  { (-0.112334,-0.334708,0.281904), (-0.0719342,-0.165108,0.342404) },
  { (0.0881658,-0.212408,-0.124496), (0.00396583,-0.137908,0.0487042) },
  { (0.221566,-0.112508,-0.0870958), (0.145866,-0.0450083,0.0790042) },
  { (0.257266,-0.0794083,0.372804), (0.0907658,-0.0582083,0.380304) },
  { (0.361166,-0.0220083,0.256204), (0.191666,0.00959167,0.264804) },
  { (-0.399934,0.230992,-0.0488958), (-0.282334,0.311992,-0.177696) },
  { (-0.414134,0.0822917,-0.0453958), (-0.297534,0.153492,-0.175196) },
  { (-0.345934,0.287792,0.128804), (-0.186134,0.393392,0.167904) },
  { (-0.317434,0.193292,0.272004), (-0.159934,0.309692,0.310604) },
  { (-0.380234,-0.0300083,0.126104), (-0.213634,-0.0647083,0.179604) },
  { (-0.336634,0.0182917,0.278804), (-0.165334,-0.0278083,0.339004) },
  { (-0.399934,0.230992,-0.0488958), (-0.282334,0.311992,-0.177696) },
  { (-0.414134,0.0822917,-0.0453958), (-0.297534,0.153492,-0.175196) },
  { (-0.122234,0.417992,-0.137896), (-0.0708342,0.465692,0.0378042) },
  { (0.0204658,0.389292,-0.0965958), (0.0819658,0.429192,0.0851042) },
  { (-0.128734,0.115692,-0.128796), (-0.0907342,0.00379167,0.0468042) },
  { (0.0108658,0.205592,-0.0910958), (0.0463658,0.106592,0.0779042) },
  { (-0.345934,0.287792,0.128804), (-0.186134,0.393392,0.167904) },
  { (-0.317434,0.193292,0.272004), (-0.159934,0.309692,0.310604) },
  { (-0.122234,0.417992,-0.137896), (-0.0708342,0.465692,0.0378042) },
  { (0.0204658,0.389292,-0.0965958), (0.0819658,0.429192,0.0851042) },
  { (0.0163658,0.264292,0.366404), (-0.00593417,0.0907917,0.377904) },
  { (0.115866,0.330792,0.250104), (0.0993658,0.147092,0.262404) },
  { (-0.380234,-0.0300083,0.126104), (-0.213634,-0.0647083,0.179604) },
  { (-0.336634,0.0182917,0.278804), (-0.165334,-0.0278083,0.339004) },
  { (-0.128734,0.115692,-0.128796), (-0.0907342,0.00379167,0.0468042) },
  { (0.0108658,0.205592,-0.0910958), (0.0463658,0.106592,0.0779042) },
  { (0.0163658,0.264292,0.366404), (-0.00593417,0.0907917,0.377904) },
  { (0.115866,0.330792,0.250104), (0.0993658,0.147092,0.262404) },
  { (-0.0978342,-0.153108,-0.260496), (-0.118334,-0.325408,-0.253596) },
  { (-0.195034,-0.00520833,-0.261896), (-0.358034,0.0173917,-0.259696) },
  { (-0.0978342,-0.153108,-0.260496), (-0.118334,-0.325408,-0.253596) },
  { (-0.257534,-0.302908,-0.246696), (-0.372434,-0.130908,-0.249896) },
  { (-0.195034,-0.00520833,-0.261896), (-0.358034,0.0173917,-0.259696) },
  { (-0.257534,-0.302908,-0.246696), (-0.372434,-0.130908,-0.249896) },
  { (-0.0489342,-0.101108,-0.0811958), (-0.00883417,-0.211208,0.0938042) },
  { (-0.143234,0.0401917,-0.0831958), (-0.224434,0.116792,0.0906042) },
  { (-0.0489342,-0.101108,-0.0811958), (-0.00883417,-0.211208,0.0938042) },
  { (-0.0800342,-0.143308,0.238704), (-0.189834,0.0225917,0.235304) },
  { (-0.143234,0.0401917,-0.0831958), (-0.224434,0.116792,0.0906042) },
  { (-0.0800342,-0.143308,0.238704), (-0.189834,0.0225917,0.235304) },
  { (-0.0769342,-0.431908,-0.0807958), (-0.0243342,-0.385308,0.0944042) },
  { (-0.226434,-0.400608,-0.0822958), (-0.302434,-0.337408,0.0810042) },
  { (-0.0769342,-0.431908,-0.0807958), (-0.0243342,-0.385308,0.0944042) },
  { (-0.0885342,-0.330108,0.238204), (-0.262534,-0.292808,0.234104) },
  { (-0.226434,-0.400608,-0.0822958), (-0.302434,-0.337408,0.0810042) },
  { (-0.0885342,-0.330108,0.238204), (-0.262534,-0.292808,0.234104) },
  { (-0.437234,0.0937917,-0.0883958), (-0.387334,0.142092,0.0855042) },
  { (-0.448234,-0.0677083,-0.0864958), (-0.416234,-0.165208,0.0783042) },
  { (-0.437234,0.0937917,-0.0883958), (-0.387334,0.142092,0.0855042) },
  { (-0.358434,0.0592917,0.230304), (-0.370834,-0.129708,0.230704) },
  { (-0.448234,-0.0677083,-0.0864958), (-0.416234,-0.165208,0.0783042) },
  { (-0.358434,0.0592917,0.230304), (-0.370834,-0.129708,0.230704) },
  { (0.00506583,-0.0841083,-0.378796), (-0.0123342,-0.269108,-0.364696) },
  { (-0.0884342,0.0528917,-0.381596), (-0.258434,0.0855917,-0.371396) },
  { (0.00506583,-0.0841083,-0.378796), (-0.0123342,-0.269108,-0.364696) },
  { (-0.161234,-0.239308,-0.360996), (-0.270134,-0.0762083,-0.364496) },
  { (-0.0884342,0.0528917,-0.381596), (-0.258434,0.0855917,-0.371396) },
  { (-0.161234,-0.239308,-0.360996), (-0.270134,-0.0762083,-0.364496) },
  { (0.167966,0.0223917,-0.338196), (0.335266,-0.0119083,-0.279496) },
  { (0.0713658,0.171492,-0.339796), (0.116266,0.330192,-0.283596) },
  { (0.167966,0.0223917,-0.338196), (0.335266,-0.0119083,-0.279496) },
  { (0.372666,0.122392,-0.231296), (0.257066,0.297492,-0.234296) },
  { (0.0713658,0.171492,-0.339796), (0.116266,0.330192,-0.283596) },
  { (0.372666,0.122392,-0.231296), (0.257066,0.297492,-0.234296) },
  { (0.155566,-0.305608,-0.312696), (0.317266,-0.200008,-0.271596) },
  { (0.0168658,-0.288308,-0.312896), (0.0551658,-0.116508,-0.269196) },
  { (0.155566,-0.305608,-0.312696), (0.317266,-0.200008,-0.271596) },
  { (0.357266,-0.0528083,-0.229996), (0.193666,-0.0282083,-0.235196) },
  { (0.0168658,-0.288308,-0.312896), (0.0551658,-0.116508,-0.269196) },
  { (0.357266,-0.0528083,-0.229996), (0.193666,-0.0282083,-0.235196) },
  { (-0.215334,0.247192,-0.321296), (-0.0582342,0.363492,-0.279996) },
  { (-0.230734,0.100192,-0.318396), (-0.0550342,0.0491917,-0.272696) },
  { (-0.215334,0.247192,-0.321296), (-0.0582342,0.363492,-0.279996) },
  { (0.0935658,0.325592,-0.238296), (0.0769658,0.149792,-0.238496) },
  { (-0.230734,0.100192,-0.318396), (-0.0550342,0.0491917,-0.272696) },
  { (0.0935658,0.325592,-0.238296), (0.0769658,0.149792,-0.238496) },
  { (0.0931658,-0.00920833,-0.0432958), (0.125466,-0.111008,0.125504) },
  { (-0.00743417,0.142592,-0.0447958), (-0.0861342,0.207392,0.121404) },
  { (0.0931658,-0.00920833,-0.0432958), (0.125466,-0.111008,0.125504) },
  { (0.0593658,-0.0548083,0.272804), (-0.0581342,0.122792,0.269204) },
  { (-0.00743417,0.142592,-0.0447958), (-0.0861342,0.207392,0.121404) },
  { (0.0593658,-0.0548083,0.272804), (-0.0581342,0.122792,0.269204) },
  { (0.210166,0.0696917,-0.181596), (0.382766,0.0247917,-0.122796) },
  { (0.117766,0.207592,-0.184396), (0.159366,0.375892,-0.125896) },
  { (0.210166,0.0696917,-0.181596), (0.382766,0.0247917,-0.122796) },
  { (0.413766,0.171792,-0.0790958), (0.307166,0.332392,-0.0822958) },
  { (0.117766,0.207592,-0.184396), (0.159366,0.375892,-0.125896) },
  { (0.413766,0.171792,-0.0790958), (0.307166,0.332392,-0.0822958) },
  { (0.298766,-0.159208,0.176804), (0.414666,-0.0757083,0.0425042) },
  { (0.228766,-0.0937083,0.319004), (0.272066,0.0688917,0.363904) },
  { (0.298766,-0.159208,0.176804), (0.414666,-0.0757083,0.0425042) },
  { (0.449266,0.0608917,0.0858042), (0.369466,0.137192,0.251104) },
  { (0.228766,-0.0937083,0.319004), (0.272066,0.0688917,0.363904) },
  { (0.449266,0.0608917,0.0858042), (0.369466,0.137192,0.251104) },
  { (-0.0468342,0.375692,0.171304), (0.0806658,0.439892,0.0373042) },
  { (-0.0119342,0.284092,0.313904), (0.155466,0.243892,0.360404) },
  { (-0.0468342,0.375692,0.171304), (0.0806658,0.439892,0.0373042) },
  { (0.220666,0.404192,0.0818042), (0.262166,0.297792,0.248004) },
  { (-0.0119342,0.284092,0.313904), (0.155466,0.243892,0.360404) },
  { (0.220666,0.404192,0.0818042), (0.262166,0.297792,0.248004) },
  { (0.0652658,-0.463908,-0.0395958), (0.126266,-0.420908,0.138704) },
  { (-0.0747342,-0.442008,-0.0400958), (-0.162434,-0.371308,0.130004) },
  { (0.0652658,-0.463908,-0.0395958), (0.126266,-0.420908,0.138704) },
  { (0.0534658,-0.360008,0.280704), (-0.112334,-0.334708,0.281904) },
  { (-0.0747342,-0.442008,-0.0400958), (-0.162434,-0.371308,0.130004) },
  { (0.0534658,-0.360008,0.280704), (-0.112334,-0.334708,0.281904) },
  { (0.187966,-0.397408,-0.166896), (0.347666,-0.282108,-0.127196) },
  { (0.0429658,-0.372308,-0.169596), (0.0881658,-0.212408,-0.124496) },
  { (0.187966,-0.397408,-0.166896), (0.347666,-0.282108,-0.127196) },
  { (0.387466,-0.147208,-0.0886958), (0.221566,-0.112508,-0.0870958) },
  { (0.0429658,-0.372308,-0.169596), (0.0881658,-0.212408,-0.124496) },
  { (0.387466,-0.147208,-0.0886958), (0.221566,-0.112508,-0.0870958) },
  { (0.282566,-0.306408,0.177804), (0.398166,-0.237508,0.0475042) },
  { (0.215766,-0.253708,0.319504), (0.257266,-0.0794083,0.372804) },
  { (0.282566,-0.306408,0.177804), (0.398166,-0.237508,0.0475042) },
  { (0.437066,-0.0880083,0.0929042), (0.361166,-0.0220083,0.256204) },
  { (0.215766,-0.253708,0.319504), (0.257266,-0.0794083,0.372804) },
  { (0.437066,-0.0880083,0.0929042), (0.361166,-0.0220083,0.256204) },
  { (-0.115734,-0.212808,0.181204), (0.00396583,-0.137908,0.0487042) },
  { (-0.0719342,-0.165108,0.342404), (0.0907658,-0.0582083,0.380304) },
  { (-0.115734,-0.212808,0.181204), (0.00396583,-0.137908,0.0487042) },
  { (0.145866,-0.0450083,0.0790042), (0.191666,0.00959167,0.264804) },
  { (-0.0719342,-0.165108,0.342404), (0.0907658,-0.0582083,0.380304) },
  { (0.145866,-0.0450083,0.0790042), (0.191666,0.00959167,0.264804) },
  { (-0.399934,0.230992,-0.0488958), (-0.345934,0.287792,0.128804) },
  { (-0.414134,0.0822917,-0.0453958), (-0.380234,-0.0300083,0.126104) },
  { (-0.399934,0.230992,-0.0488958), (-0.345934,0.287792,0.128804) },
  { (-0.317434,0.193292,0.272004), (-0.336634,0.0182917,0.278804) },
  { (-0.414134,0.0822917,-0.0453958), (-0.380234,-0.0300083,0.126104) },
  { (-0.317434,0.193292,0.272004), (-0.336634,0.0182917,0.278804) },
  { (-0.282334,0.311992,-0.177696), (-0.122234,0.417992,-0.137896) },
  { (-0.297534,0.153492,-0.175196), (-0.128734,0.115692,-0.128796) },
  { (-0.282334,0.311992,-0.177696), (-0.122234,0.417992,-0.137896) },
  { (0.0204658,0.389292,-0.0965958), (0.0108658,0.205592,-0.0910958) },
  { (-0.297534,0.153492,-0.175196), (-0.128734,0.115692,-0.128796) },
  { (0.0204658,0.389292,-0.0965958), (0.0108658,0.205592,-0.0910958) },
  { (-0.186134,0.393392,0.167904), (-0.0708342,0.465692,0.0378042) },
  { (-0.159934,0.309692,0.310604), (0.0163658,0.264292,0.366404) },
  { (-0.186134,0.393392,0.167904), (-0.0708342,0.465692,0.0378042) },
  { (0.0819658,0.429192,0.0851042), (0.115866,0.330792,0.250104) },
  { (-0.159934,0.309692,0.310604), (0.0163658,0.264292,0.366404) },
  { (0.0819658,0.429192,0.0851042), (0.115866,0.330792,0.250104) },
  { (-0.213634,-0.0647083,0.179604), (-0.0907342,0.00379167,0.0468042) },
  { (-0.165334,-0.0278083,0.339004), (-0.00593417,0.0907917,0.377904) },
  { (-0.213634,-0.0647083,0.179604), (-0.0907342,0.00379167,0.0468042) },
  { (0.0463658,0.106592,0.0779042), (0.0993658,0.147092,0.262404) },
  { (-0.165334,-0.0278083,0.339004), (-0.00593417,0.0907917,0.377904) },
  { (0.0463658,0.106592,0.0779042), (0.0993658,0.147092,0.262404) },
  { (-0.0978342,-0.153108,-0.260496), (-0.195034,-0.00520833,-0.261896) },
  { (-0.0978342,-0.153108,-0.260496), (-0.195034,-0.00520833,-0.261896) },
  { (-0.118334,-0.325408,-0.253596), (-0.257534,-0.302908,-0.246696) },
  { (-0.118334,-0.325408,-0.253596), (-0.257534,-0.302908,-0.246696) },
  { (-0.358034,0.0173917,-0.259696), (-0.372434,-0.130908,-0.249896) },
  { (-0.358034,0.0173917,-0.259696), (-0.372434,-0.130908,-0.249896) },
  { (-0.0489342,-0.101108,-0.0811958), (-0.143234,0.0401917,-0.0831958) },
  { (-0.0489342,-0.101108,-0.0811958), (-0.143234,0.0401917,-0.0831958) },
  { (-0.00883417,-0.211208,0.0938042), (-0.0800342,-0.143308,0.238704) },
  { (-0.00883417,-0.211208,0.0938042), (-0.0800342,-0.143308,0.238704) },
  { (-0.224434,0.116792,0.0906042), (-0.189834,0.0225917,0.235304) },
  { (-0.224434,0.116792,0.0906042), (-0.189834,0.0225917,0.235304) },
  { (-0.0769342,-0.431908,-0.0807958), (-0.226434,-0.400608,-0.0822958) },
  { (-0.0769342,-0.431908,-0.0807958), (-0.226434,-0.400608,-0.0822958) },
  { (-0.0243342,-0.385308,0.0944042), (-0.0885342,-0.330108,0.238204) },
  { (-0.0243342,-0.385308,0.0944042), (-0.0885342,-0.330108,0.238204) },
  { (-0.302434,-0.337408,0.0810042), (-0.262534,-0.292808,0.234104) },
  { (-0.302434,-0.337408,0.0810042), (-0.262534,-0.292808,0.234104) },
  { (-0.437234,0.0937917,-0.0883958), (-0.448234,-0.0677083,-0.0864958) },
  { (-0.437234,0.0937917,-0.0883958), (-0.448234,-0.0677083,-0.0864958) },
  { (-0.387334,0.142092,0.0855042), (-0.358434,0.0592917,0.230304) },
  { (-0.387334,0.142092,0.0855042), (-0.358434,0.0592917,0.230304) },
  { (-0.416234,-0.165208,0.0783042), (-0.370834,-0.129708,0.230704) },
  { (-0.416234,-0.165208,0.0783042), (-0.370834,-0.129708,0.230704) },
  { (0.00506583,-0.0841083,-0.378796), (-0.0884342,0.0528917,-0.381596) },
  { (0.00506583,-0.0841083,-0.378796), (-0.0884342,0.0528917,-0.381596) },
  { (-0.0123342,-0.269108,-0.364696), (-0.161234,-0.239308,-0.360996) },
  { (-0.0123342,-0.269108,-0.364696), (-0.161234,-0.239308,-0.360996) },
  { (-0.258434,0.0855917,-0.371396), (-0.270134,-0.0762083,-0.364496) },
  { (-0.258434,0.0855917,-0.371396), (-0.270134,-0.0762083,-0.364496) },
  { (0.167966,0.0223917,-0.338196), (0.0713658,0.171492,-0.339796) },
  { (0.167966,0.0223917,-0.338196), (0.0713658,0.171492,-0.339796) },
  { (0.335266,-0.0119083,-0.279496), (0.372666,0.122392,-0.231296) },
  { (0.335266,-0.0119083,-0.279496), (0.372666,0.122392,-0.231296) },
  { (0.116266,0.330192,-0.283596), (0.257066,0.297492,-0.234296) },
  { (0.116266,0.330192,-0.283596), (0.257066,0.297492,-0.234296) },
  { (0.155566,-0.305608,-0.312696), (0.0168658,-0.288308,-0.312896) },
  { (0.155566,-0.305608,-0.312696), (0.0168658,-0.288308,-0.312896) },
  { (0.317266,-0.200008,-0.271596), (0.357266,-0.0528083,-0.229996) },
  { (0.317266,-0.200008,-0.271596), (0.357266,-0.0528083,-0.229996) },
  { (0.0551658,-0.116508,-0.269196), (0.193666,-0.0282083,-0.235196) },
  { (0.0551658,-0.116508,-0.269196), (0.193666,-0.0282083,-0.235196) },
  { (-0.215334,0.247192,-0.321296), (-0.230734,0.100192,-0.318396) },
  { (-0.215334,0.247192,-0.321296), (-0.230734,0.100192,-0.318396) },
  { (-0.0582342,0.363492,-0.279996), (0.0935658,0.325592,-0.238296) },
  { (-0.0582342,0.363492,-0.279996), (0.0935658,0.325592,-0.238296) },
  { (-0.0550342,0.0491917,-0.272696), (0.0769658,0.149792,-0.238496) },
  { (-0.0550342,0.0491917,-0.272696), (0.0769658,0.149792,-0.238496) },
  { (0.0931658,-0.00920833,-0.0432958), (-0.00743417,0.142592,-0.0447958) },
  { (0.0931658,-0.00920833,-0.0432958), (-0.00743417,0.142592,-0.0447958) },
  { (0.125466,-0.111008,0.125504), (0.0593658,-0.0548083,0.272804) },
  { (0.125466,-0.111008,0.125504), (0.0593658,-0.0548083,0.272804) },
  { (-0.0861342,0.207392,0.121404), (-0.0581342,0.122792,0.269204) },
  { (-0.0861342,0.207392,0.121404), (-0.0581342,0.122792,0.269204) },
  { (0.210166,0.0696917,-0.181596), (0.117766,0.207592,-0.184396) },
  { (0.210166,0.0696917,-0.181596), (0.117766,0.207592,-0.184396) },
  { (0.382766,0.0247917,-0.122796), (0.413766,0.171792,-0.0790958) },
  { (0.382766,0.0247917,-0.122796), (0.413766,0.171792,-0.0790958) },
  { (0.159366,0.375892,-0.125896), (0.307166,0.332392,-0.0822958) },
  { (0.159366,0.375892,-0.125896), (0.307166,0.332392,-0.0822958) },
  { (0.298766,-0.159208,0.176804), (0.228766,-0.0937083,0.319004) },
  { (0.298766,-0.159208,0.176804), (0.228766,-0.0937083,0.319004) },
  { (0.414666,-0.0757083,0.0425042), (0.449266,0.0608917,0.0858042) },
  { (0.414666,-0.0757083,0.0425042), (0.449266,0.0608917,0.0858042) },
  { (0.272066,0.0688917,0.363904), (0.369466,0.137192,0.251104) },
  { (0.272066,0.0688917,0.363904), (0.369466,0.137192,0.251104) },
  { (-0.0468342,0.375692,0.171304), (-0.0119342,0.284092,0.313904) },
  { (-0.0468342,0.375692,0.171304), (-0.0119342,0.284092,0.313904) },
  { (0.0806658,0.439892,0.0373042), (0.220666,0.404192,0.0818042) },
  { (0.0806658,0.439892,0.0373042), (0.220666,0.404192,0.0818042) },
  { (0.155466,0.243892,0.360404), (0.262166,0.297792,0.248004) },
  { (0.155466,0.243892,0.360404), (0.262166,0.297792,0.248004) },
  { (0.0652658,-0.463908,-0.0395958), (-0.0747342,-0.442008,-0.0400958) },
  { (0.0652658,-0.463908,-0.0395958), (-0.0747342,-0.442008,-0.0400958) },
  { (0.126266,-0.420908,0.138704), (0.0534658,-0.360008,0.280704) },
  { (0.126266,-0.420908,0.138704), (0.0534658,-0.360008,0.280704) },
  { (-0.162434,-0.371308,0.130004), (-0.112334,-0.334708,0.281904) },
  { (-0.162434,-0.371308,0.130004), (-0.112334,-0.334708,0.281904) },
  { (0.187966,-0.397408,-0.166896), (0.0429658,-0.372308,-0.169596) },
  { (0.187966,-0.397408,-0.166896), (0.0429658,-0.372308,-0.169596) },
  { (0.347666,-0.282108,-0.127196), (0.387466,-0.147208,-0.0886958) },
  { (0.347666,-0.282108,-0.127196), (0.387466,-0.147208,-0.0886958) },
  { (0.0881658,-0.212408,-0.124496), (0.221566,-0.112508,-0.0870958) },
  { (0.0881658,-0.212408,-0.124496), (0.221566,-0.112508,-0.0870958) },
  { (0.282566,-0.306408,0.177804), (0.215766,-0.253708,0.319504) },
  { (0.282566,-0.306408,0.177804), (0.215766,-0.253708,0.319504) },
  { (0.398166,-0.237508,0.0475042), (0.437066,-0.0880083,0.0929042) },
  { (0.398166,-0.237508,0.0475042), (0.437066,-0.0880083,0.0929042) },
  { (0.257266,-0.0794083,0.372804), (0.361166,-0.0220083,0.256204) },
  { (0.257266,-0.0794083,0.372804), (0.361166,-0.0220083,0.256204) },
  { (-0.115734,-0.212808,0.181204), (-0.0719342,-0.165108,0.342404) },
  { (-0.115734,-0.212808,0.181204), (-0.0719342,-0.165108,0.342404) },
  { (0.00396583,-0.137908,0.0487042), (0.145866,-0.0450083,0.0790042) },
  { (0.00396583,-0.137908,0.0487042), (0.145866,-0.0450083,0.0790042) },
  { (0.0907658,-0.0582083,0.380304), (0.191666,0.00959167,0.264804) },
  { (0.0907658,-0.0582083,0.380304), (0.191666,0.00959167,0.264804) },
  { (-0.399934,0.230992,-0.0488958), (-0.414134,0.0822917,-0.0453958) },
  { (-0.399934,0.230992,-0.0488958), (-0.414134,0.0822917,-0.0453958) },
  { (-0.345934,0.287792,0.128804), (-0.317434,0.193292,0.272004) },
  { (-0.345934,0.287792,0.128804), (-0.317434,0.193292,0.272004) },
  { (-0.380234,-0.0300083,0.126104), (-0.336634,0.0182917,0.278804) },
  { (-0.380234,-0.0300083,0.126104), (-0.336634,0.0182917,0.278804) },
  { (-0.282334,0.311992,-0.177696), (-0.297534,0.153492,-0.175196) },
  { (-0.282334,0.311992,-0.177696), (-0.297534,0.153492,-0.175196) },
  { (-0.122234,0.417992,-0.137896), (0.0204658,0.389292,-0.0965958) },
  { (-0.122234,0.417992,-0.137896), (0.0204658,0.389292,-0.0965958) },
  { (-0.128734,0.115692,-0.128796), (0.0108658,0.205592,-0.0910958) },
  { (-0.128734,0.115692,-0.128796), (0.0108658,0.205592,-0.0910958) },
  { (-0.186134,0.393392,0.167904), (-0.159934,0.309692,0.310604) },
  { (-0.186134,0.393392,0.167904), (-0.159934,0.309692,0.310604) },
  { (-0.0708342,0.465692,0.0378042), (0.0819658,0.429192,0.0851042) },
  { (-0.0708342,0.465692,0.0378042), (0.0819658,0.429192,0.0851042) },
  { (0.0163658,0.264292,0.366404), (0.115866,0.330792,0.250104) },
  { (0.0163658,0.264292,0.366404), (0.115866,0.330792,0.250104) },
  { (-0.213634,-0.0647083,0.179604), (-0.165334,-0.0278083,0.339004) },
  { (-0.213634,-0.0647083,0.179604), (-0.165334,-0.0278083,0.339004) },
  { (-0.0907342,0.00379167,0.0468042), (0.0463658,0.106592,0.0779042) },
  { (-0.0907342,0.00379167,0.0468042), (0.0463658,0.106592,0.0779042) },
  { (-0.00593417,0.0907917,0.377904), (0.0993658,0.147092,0.262404) },
  { (-0.00593417,0.0907917,0.377904), (0.0993658,0.147092,0.262404) }};

pen[] arrowPens = new pen[] {hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 0/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 1/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 2/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 ), hue( 3/4 )};
